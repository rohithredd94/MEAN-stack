{"version":3,"sources":["app.min.js"],"names":["config","$routeProvider","$locationProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","html5Mode","run","$rootScope","$location","authentication","console","log","$on","event","nextRoute","currentRoute","path","isLoggedIn","angular","module","homeCtrl","$scope","$log","message","mainCtrl","meanData","$inject","profileCtrl","vm","this","user","getProfile","success","data","error","e","loginCtrl","credentials","email","password","onSubmit","login","err","then","registerCtrl","name","register","$http","$window","saveToken","token","localStorage","getToken","payload","split","atob","JSON","parse","exp","Date","now","currentUser","post","logout","removeItem","service","get","headers","Authorization","navigationCtrl","navigation","restrict","directive"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\r\n\r\n  angular.module('meanApp', ['ngRoute']);\r\n\r\n  function config ($routeProvider, $locationProvider) {\r\n    $routeProvider\r\n      .when('/', {\r\n        templateUrl: 'home/home.view.html',\r\n        controller: 'homeCtrl',\r\n        controllerAs: 'vm'\r\n      })\r\n      .when('/register', {\r\n        templateUrl: '/auth/register/register.view.html',\r\n        controller: 'registerCtrl',\r\n        controllerAs: 'vm'\r\n      })\r\n      .when('/login', {\r\n        templateUrl: '/auth/login/login.view.html',\r\n        controller: 'loginCtrl',\r\n        controllerAs: 'vm'\r\n      })\r\n      .when('/profile', {\r\n        templateUrl: '/profile/profile.view.html',\r\n        controller: 'profileCtrl',\r\n        controllerAs: 'vm'\r\n      })\r\n      .when('/main', {\r\n        templateUrl: '/main/main.view.html',\r\n        controller: 'mainCtrl',\r\n        controllerAs: 'vm'\r\n      })\r\n      .otherwise({redirectTo: '/'});\r\n\r\n    // use the HTML5 History API\r\n    $locationProvider.html5Mode(true);\r\n  }\r\n\r\n  function run($rootScope, $location, authentication) {\r\n    console.log('Inside Run Function');\r\n    $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\r\n      //This code is not helping to prevent illegal login\r\n      if ($location.path() === '/profile' && !authentication.isLoggedIn()) {\r\n        console.log('Checking if logged in-1');\r\n        $location.path('/');\r\n      }else if(($location.path() === '/'/* || $location.path() === '/register'*/) && authentication.isLoggedIn()){ //Change by Rohith\r\n        console.log('Checking if logged in-2');\r\n        $location.path('/main');\r\n      }\r\n      \r\n\r\n    });\r\n  }\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .config(['$routeProvider', '$locationProvider', config])\r\n    .run(['$rootScope', '$location', 'authentication', run]);\r\n\r\n})();\r\n\n(function() {\r\n  \r\n  angular\r\n    .module('meanApp')\r\n    .controller('homeCtrl', homeCtrl);\r\n\r\n    function homeCtrl () {\r\n      console.log('Home controller is not running');\r\n      $scope.$log = $log;\r\n      $scope.message = 'Hello';\r\n    }\r\n\r\n})();\n(function() {\r\n  \r\n  angular\r\n    .module('meanApp')\r\n    .controller('mainCtrl', mainCtrl);\r\n\r\n  mainCtrl.$inject = ['$location', 'meanData'];\r\n  function mainCtrl($location, meanData) {\r\n    // var vm = this;\r\n\r\n    // vm.user = {};\r\n\r\n    // meanData.getMain()\r\n    //   .success(function(data) {\r\n    //     vm.user = data;\r\n    //   })\r\n    //   .error(function (e) {\r\n    //     console.log(e);\r\n    //   });\r\n  }\r\n\r\n})();\n(function() {\r\n  \r\n  angular\r\n    .module('meanApp')\r\n    .controller('profileCtrl', profileCtrl);\r\n\r\n  profileCtrl.$inject = ['$location', 'meanData'];\r\n  function profileCtrl($location, meanData) {\r\n    var vm = this;\r\n\r\n    vm.user = {};\r\n\r\n    meanData.getProfile()\r\n      .success(function(data) {\r\n        vm.user = data;\r\n      })\r\n      .error(function (e) {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n})();\n(function () {\r\n\r\n  angular\r\n  .module('meanApp')\r\n  .controller('loginCtrl', loginCtrl);\r\n\r\n  loginCtrl.$inject = ['$location', 'authentication','$scope','$log'];\r\n  function loginCtrl($location, authentication,$scope,$log) {\r\n    //$scope.$log = $log;\r\n    //$scope.message = 'Hello';\r\n    console.log(\"Login Controller Working\");\r\n    var vm = this;\r\n\r\n    vm.credentials = {\r\n      email : \"\",\r\n      password : \"\",\r\n      message:\"\",\r\n    };\r\n\r\n    vm.onSubmit = function () {\r\n      console.log('Inside Submit');\r\n      authentication\r\n        .login(vm.credentials)\r\n        .error(function(err){\r\n          //alert(\"Incorrect credentials\");\r\n          vm.credentials.message = \"Incorrect credentials\";\r\n        })\r\n        .then(function(){\r\n          $location.path('main');\r\n        });\r\n    };\r\n\r\n  }\r\n\r\n})();\r\n\n(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .controller('registerCtrl', registerCtrl);\r\n\r\n  registerCtrl.$inject = ['$location', 'authentication'];\r\n  function registerCtrl($location, authentication) {\r\n    var vm = this;\r\n    console.log(\"Initialized credentials\");\r\n    vm.credentials = {\r\n      name : \"\",\r\n      email : \"\",\r\n      password : \"\",\r\n      message:\"\"\r\n    };\r\n\r\n    vm.onSubmit = function () {\r\n      console.log('Submitting registration');\r\n      authentication\r\n        .register(vm.credentials)\r\n        .error(function(err){\r\n          console.log(err.message);\r\n          if(err.message = \"User Already exists\")\r\n            vm.credentials.message = \"User Already Exists\";\r\n        })\r\n        .success(function(){\r\n          $location.path('main');\r\n        });\r\n        // .then(function(){\r\n        //   console.log(\"Inside the function\");\r\n        //   if(!authentication.isLoggedIn())\r\n        //    $location.path('/');\r\n        //  else\r\n        //   $location.path('profile');\r\n        // })\r\n\r\n    };\r\n\r\n  }\r\n\r\n})();\r\n\n(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .service('authentication', authentication);\r\n  console.log(\"Hello\");\r\n  authentication.$inject = ['$http', '$window'];\r\n  function authentication ($http, $window) {\r\n\r\n    var saveToken = function (token) {\r\n      $window.localStorage['mean-token'] = token;\r\n    };\r\n\r\n    var getToken = function () {\r\n      return $window.localStorage['mean-token'];\r\n    };\r\n\r\n    var isLoggedIn = function() {\r\n      var token = getToken();\r\n\r\n      var payload;\r\n\r\n      if(token){\r\n        payload = token.split('.')[1];\r\n        payload = $window.atob(payload);\r\n        payload = JSON.parse(payload);\r\n\r\n        return payload.exp > Date.now() / 1000;\r\n      } else {\r\n        return false;\r\n      }\r\n    };\r\n\r\n    var currentUser = function() {\r\n      if(isLoggedIn()){\r\n        var token = getToken();\r\n        var payload = token.split('.')[1];\r\n        payload = $window.atob(payload);\r\n        payload = JSON.parse(payload);\r\n        return {\r\n          email : payload.email,\r\n          name : payload.name\r\n        };\r\n      }\r\n    };\r\n\r\n    register = function(user) {\r\n\r\n      return $http.post('/api/register', user).success(function(data){\r\n        saveToken(data.token);\r\n      });\r\n    };\r\n\r\n    login = function(user) {\r\n      return $http.post('/api/login', user).success(function(data) {\r\n        saveToken(data.token);\r\n      });\r\n    };\r\n\r\n    logout = function() {\r\n      $window.localStorage.removeItem('mean-token');\r\n    };\r\n\r\n    return {\r\n      currentUser : currentUser,\r\n      saveToken : saveToken,\r\n      getToken : getToken,\r\n      isLoggedIn : isLoggedIn,\r\n      register : register,\r\n      login : login,\r\n      logout : logout\r\n    };\r\n  }\r\n\r\n\r\n})();\r\n\n(function() {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .service('meanData', meanData);\r\n\r\n  meanData.$inject = ['$http', 'authentication'];\r\n  function meanData ($http, authentication) {\r\n\r\n    var getProfile = function () {\r\n      return $http.get('/api/profile', {\r\n        headers: {\r\n          Authorization: 'Bearer '+ authentication.getToken()\r\n        }\r\n      });\r\n    };\r\n\r\n    return {\r\n      getProfile : getProfile\r\n    };\r\n  }\r\n\r\n})();\n(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .controller('navigationCtrl', navigationCtrl);\r\n\r\n  navigationCtrl.$inject = ['$location','authentication'];\r\n  function navigationCtrl($location, authentication) {\r\n    var vm = this;\r\n\r\n    vm.isLoggedIn = authentication.isLoggedIn();\r\n\r\n    vm.currentUser = authentication.currentUser();\r\n\r\n  }\r\n\r\n})();\n(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .directive('navigation', navigation);\r\n\r\n  function navigation () {\r\n    return {\r\n      restrict: 'EA',\r\n      templateUrl: '/common/directives/navigation/navigation.template.html',\r\n      controller: 'navigationCtrl as navvm'\r\n    };\r\n  }\r\n\r\n})();"]}