{"version":3,"sources":["app.min.js"],"names":["config","$routeProvider","$locationProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","html5Mode","run","$rootScope","$location","authentication","console","log","$on","event","nextRoute","currentRoute","path","isLoggedIn","angular","module","homeCtrl","$scope","$log","message","profileCtrl","meanData","vm","this","user","getProfile","success","data","error","e","$inject","loginCtrl","credentials","email","password","onSubmit","login","err","then","registerCtrl","name","register","$http","$window","saveToken","token","localStorage","getToken","payload","split","atob","JSON","parse","exp","Date","now","currentUser","post","logout","removeItem","service","get","headers","Authorization","navigationCtrl","navigation","restrict","directive"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\n\n  angular.module('meanApp', ['ngRoute']);\n\n  function config ($routeProvider, $locationProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: 'home/home.view.html',\n        controller: 'homeCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/register', {\n        templateUrl: '/auth/register/register.view.html',\n        controller: 'registerCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/login', {\n        templateUrl: '/auth/login/login.view.html',\n        controller: 'loginCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/profile', {\n        templateUrl: '/profile/profile.view.html',\n        controller: 'profileCtrl',\n        controllerAs: 'vm'\n      })\n      .otherwise({redirectTo: '/'});\n\n    // use the HTML5 History API\n    $locationProvider.html5Mode(true);\n  }\n\n  function run($rootScope, $location, authentication) {\n    console.log('Inside Run Function');\n    $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\n      //This code is not helping to prevent illegal login\n      if ($location.path() === '/profile' && !authentication.isLoggedIn()) {\n        console.log('Checking if logged in-1');\n        $location.path('/');\n      }else if(($location.path() === '/'/* || $location.path() === '/register'*/) && authentication.isLoggedIn()){ //Change by Rohith\n        console.log('Checking if logged in-2');\n        $location.path('/profile');\n      }\n      \n\n    });\n  }\n\n  angular\n    .module('meanApp')\n    .config(['$routeProvider', '$locationProvider', config])\n    .run(['$rootScope', '$location', 'authentication', run]);\n\n})();\n\n(function() {\n  \n  angular\n    .module('meanApp')\n    .controller('homeCtrl', homeCtrl);\n\n    function homeCtrl () {\n      console.log('Home controller is not running');\n      $scope.$log = $log;\n      $scope.message = 'Hello';\n    }\n\n})();\n(function() {\n  \n  angular\n    .module('meanApp')\n    .controller('profileCtrl', profileCtrl);\n\n  profileCtrl.$inject = ['$location', 'meanData'];\n  function profileCtrl($location, meanData) {\n    var vm = this;\n\n    vm.user = {};\n\n    meanData.getProfile()\n      .success(function(data) {\n        vm.user = data;\n      })\n      .error(function (e) {\n        console.log(e);\n      });\n  }\n\n})();\n(function () {\n\n  angular\n  .module('meanApp')\n  .controller('loginCtrl', loginCtrl);\n\n  loginCtrl.$inject = ['$location', 'authentication','$scope','$log'];\n  function loginCtrl($location, authentication,$scope,$log) {\n    //$scope.$log = $log;\n    //$scope.message = 'Hello';\n    console.log(\"Login Controller Working\");\n    var vm = this;\n\n    vm.credentials = {\n      email : \"\",\n      password : \"\",\n      message:\"\",\n    };\n\n    vm.onSubmit = function () {\n      console.log('Inside Submit');\n      authentication\n        .login(vm.credentials)\n        .error(function(err){\n          //alert(\"Incorrect credentials\");\n          vm.credentials.message = \"Incorrect credentials\";\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n\n  }\n\n})();\n\n(function () {\n\n  angular\n    .module('meanApp')\n    .controller('registerCtrl', registerCtrl);\n\n  registerCtrl.$inject = ['$location', 'authentication'];\n  function registerCtrl($location, authentication) {\n    var vm = this;\n    console.log(\"Initialized credentials\");\n    vm.credentials = {\n      name : \"\",\n      email : \"\",\n      password : \"\",\n      message:\"\"\n    };\n\n    vm.onSubmit = function () {\n      console.log('Submitting registration');\n      authentication\n        .register(vm.credentials)\n        .error(function(err){\n          console.log(err.message);\n          if(err.message = \"User Already exists\")\n            vm.credentials.message = \"User Already Exists\";\n        })\n        /*.success(function(){\n          $location.path('profile');\n        });*/\n        // .then(function(){\n        //   console.log(\"Inside the function\");\n        //   if(!authentication.isLoggedIn())\n        //    $location.path('/');\n        //  else\n        //   $location.path('profile');\n        // })\n\n    };\n\n  }\n\n})();\n\n(function () {\n\n  angular\n    .module('meanApp')\n    .service('authentication', authentication);\n  console.log(\"Hello\");\n  authentication.$inject = ['$http', '$window'];\n  function authentication ($http, $window) {\n\n    var saveToken = function (token) {\n      $window.localStorage['mean-token'] = token;\n    };\n\n    var getToken = function () {\n      return $window.localStorage['mean-token'];\n    };\n\n    var isLoggedIn = function() {\n      var token = getToken();\n\n      var payload;\n\n      if(token){\n        payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n\n        return payload.exp > Date.now() / 1000;\n      } else {\n        return false;\n      }\n    };\n\n    var currentUser = function() {\n      if(isLoggedIn()){\n        var token = getToken();\n        var payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n        return {\n          email : payload.email,\n          name : payload.name\n        };\n      }\n    };\n\n    register = function(user) {\n\n      return $http.post('/api/register', user).success(function(data){\n        saveToken(data.token);\n      });\n    };\n\n    login = function(user) {\n      return $http.post('/api/login', user).success(function(data) {\n        saveToken(data.token);\n      });\n    };\n\n    logout = function() {\n      $window.localStorage.removeItem('mean-token');\n    };\n\n    return {\n      currentUser : currentUser,\n      saveToken : saveToken,\n      getToken : getToken,\n      isLoggedIn : isLoggedIn,\n      register : register,\n      login : login,\n      logout : logout\n    };\n  }\n\n\n})();\n\n(function() {\n\n  angular\n    .module('meanApp')\n    .service('meanData', meanData);\n\n  meanData.$inject = ['$http', 'authentication'];\n  function meanData ($http, authentication) {\n\n    var getProfile = function () {\n      return $http.get('/api/profile', {\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken()\n        }\n      });\n    };\n\n    return {\n      getProfile : getProfile\n    };\n  }\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .controller('navigationCtrl', navigationCtrl);\n\n  navigationCtrl.$inject = ['$location','authentication'];\n  function navigationCtrl($location, authentication) {\n    var vm = this;\n\n    vm.isLoggedIn = authentication.isLoggedIn();\n\n    vm.currentUser = authentication.currentUser();\n\n  }\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .directive('navigation', navigation);\n\n  function navigation () {\n    return {\n      restrict: 'EA',\n      templateUrl: '/common/directives/navigation/navigation.template.html',\n      controller: 'navigationCtrl as navvm'\n    };\n  }\n\n})();"]}